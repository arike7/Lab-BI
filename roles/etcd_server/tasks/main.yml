---
- name: Install ETCD dependencies (example for CentOS/RHEL)
  ansible.builtin.yum:
    name:
      - yum-utils
    state: present
  become: yes

- name: Ensure selinux Python bindings are installed
  become: yes
  ansible.builtin.dnf:
    name: libselinux-python3
    state: present
  become: yes

- name: Ensure 'etcd' group exists
  ansible.builtin.group:
    name: etcd
    system: yes
    state: present
  become: yes

- name: Ensure 'etcd' system user exists
  become: yes
  ansible.builtin.user:
    name: etcd
    group: etcd
    system: yes
    shell: /sbin/nologin
    home: /var/lib/etcd
    create_home: no
    state: present
    force: yes

- name: Ensure /var/lib/etcd exists and owned by etcd
  become: yes
  ansible.builtin.file:
    path: /var/lib/etcd
    state: directory
    owner: etcd
    group: etcd
    mode: '0700'

# - name: Set SELinux context for etcd data directory
#   community.general.sefcontext:
#     target: '/var/lib/etcd(/.*)?'
#     setype: container_file_t
#     state: present
#   become: yes
#   when: ansible_selinux.status == "enabled"

- name: Check if ETCD binary already exists
  ansible.builtin.stat:
    path: /usr/local/bin/etcd
  register: etcd_binary

- name: Download ETCD binary
  ansible.builtin.get_url:
    url: "https://github.com/etcd-io/etcd/releases/download/v3.6.2/etcd-v3.6.2-linux-amd64.tar.gz"
    dest: "/tmp/etcd-v3.6.2-linux-amd64.tar.gz"
    mode: '0644'
  when: not etcd_binary.stat.exists

- name: Extract ETCD binaries to /usr/local/bin
  become: yes
  ansible.builtin.unarchive:
    src: "/tmp/etcd-v3.6.2-linux-amd64.tar.gz"
    dest: "/usr/local/bin/"
    remote_src: yes
    extra_opts: [--strip-components=1]
    owner: root
    group: root
    mode: '0755'
    creates: "/usr/local/bin/etcd"
  when: not etcd_binary.stat.exists

- name: Create systemd service file for ETCD
  become: yes
  ansible.builtin.template:
    src: etcd.service.j2
    dest: /etc/systemd/system/etcd.service
    owner: root
    group: root
    mode: '0644'
  notify: Reload systemd and restart etcd

- name: Verify etcd can run as etcd user
  become: yes
  become_user: etcd
  command: /usr/local/bin/etcd --version
  register: etcd_version_check
  changed_when: false

- name: Enable ETCD service
  become: yes
  ansible.builtin.systemd:
    name: etcd
    enabled: yes
    state: started
    daemon_reload: yes

# --- Add node_exporter for Prometheus monitoring ---
- name: Check if node_exporter binary exists
  ansible.builtin.stat:
    path: /usr/local/bin/node_exporter
  register: node_exporter_binary

- name: Create 'node_exporter' group
  ansible.builtin.group:
    name: node_exporter
    system: yes
    state: present
  become: yes
  when: not node_exporter_binary.stat.exists

- name: Create node_exporter user
  ansible.builtin.user:
    name: node_exporter
    group: node_exporter
    shell: /sbin/nologin
    system: yes
    create_home: no
    state: present
  become: yes
  when: not node_exporter_binary.stat.exists

- name: Download node_exporter
  ansible.builtin.get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz"
    dest: "/tmp/node_exporter-1.7.0.linux-amd64.tar.gz"
    mode: '0644'
  when: not node_exporter_binary.stat.exists

- name: Extract node_exporter binaries to /usr/local/bin
  ansible.builtin.unarchive:
    src: "/tmp/node_exporter-1.7.0.linux-amd64.tar.gz"
    dest: "/usr/local/bin/"
    remote_src: yes
    extra_opts: [--strip-components=1]
    owner: root
    group: root
    mode: '0755'
    creates: "/usr/local/bin/node_exporter"
  when: not node_exporter_binary.stat.exists

- name: Create node_exporter systemd service file
  ansible.builtin.template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: '0644'
  become: yes
  notify: Start node_exporter

# --- Очистка временных файлов (необязательно, но рекомендуется) ---
- name: Clean up downloaded ETCD archive
  ansible.builtin.file:
    path: /tmp/etcd-v3.6.2-linux-amd64.tar.gz
    state: absent
  become: yes

- name: Clean up downloaded node_exporter archive
  ansible.builtin.file:
    path: /tmp/node_exporter-1.7.0.linux-amd64.tar.gz
    state: absent
  become: yes