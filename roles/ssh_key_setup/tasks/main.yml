---
- name: Create ansible group
  ansible.builtin.group:
    name: ansible
    state: present

- name: Create ansible user
  ansible.builtin.user:
    name: ansible
    group: ansible
    shell: /bin/bash
    create_home: yes
    state: present

- name: Add ansible user to sudoers group (without password)
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/ansible
    state: present
    create: yes
    mode: '0440'
    line: "ansible ALL=(ALL) NOPASSWD: ALL"
    validate: '/usr/sbin/visudo -cf %s'

- name: Generate SSH key for ansible user on docker01 (if on docker01)
  ansible.builtin.community.crypto.openssh_keypair:
    path: /home/ansible/.ssh/id_rsa
    type: rsa
    size: 4096
    state: present
    force: no
  become_user: ansible
  when: inventory_hostname == 'docker01'

- name: Fetch public key from docker01 to local (Ansible control host)
  ansible.builtin.fetch:
    src: /home/ansible/.ssh/id_rsa.pub
    dest: /tmp/ansible_id_rsa.pub
    flat: yes
  when: inventory_hostname == 'docker01'

- name: Add docker01's ansible user public key to authorized_keys on all hosts
  ansible.builtin.authorized_key:
    user: ansible
    state: present
    key: "{{ lookup('file', '/tmp/ansible_id_rsa.pub') }}"
  when: inventory_hostname != 'docker01' or ansible_loop.first is defined
  loop_control:
    loop_var: ansible_loop
  loop: "{{ groups['all'] }}"

- name: Add docker01's ansible user public key to its own authorized_keys
  ansible.builtin.authorized_key:
    user: ansible
    state: present
    key: "{{ lookup('file', '/home/ansible/.ssh/id_rsa.pub') }}"
  become_user: ansible
  when: inventory_hostname == 'docker01'

- name: Clean up temporary public key
  ansible.builtin.file:
    path: /tmp/ansible_id_rsa.pub
    state: absent
  when: inventory_hostname == 'docker01'